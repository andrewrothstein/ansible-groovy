---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: look for existing install in {{ groovy_install_dir }}
  become: true
  stat:
    path: '{{ groovy_install_dir }}'
  changed_when: False
  register: groovy_binary
- when: not groovy_binary.stat.exists
  block:
    - name: downloading {{ groovy_url }} to {{ groovy_tmp_zip }}
      become: true
      become_user: root
      get_url:
        url: '{{ groovy_url }}'
        dest: '{{ groovy_tmp_zip }}'
        checksum: '{{ groovy_checksum }}'
        mode: 0644
    - name: unarchiving {{ groovy_tmp_zip }} to {{ groovy_parent_install_dir }}
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ groovy_tmp_zip }}'
        dest: '{{ groovy_parent_install_dir }}'
        creates: '{{ groovy_install_dir }}'
  always:
    - name: rm {{ groovy_tmp_zip }}
      become: true
      become_user: root
      file:
        path: '{{ groovy_tmp_zip }}'
        state: absent
- name: linking {{ groovy_link_dir }} to {{ groovy_install_dir }}
  become: true
  become_user: root
  file:
    src: '{{ groovy_install_dir }}'
    dest: '{{ groovy_link_dir }}'
    state: link
- name: adding groovy to default login shell path
  become: true
  become_user: root
  with_items:
    - f: groovy.sh
      d: /etc/profile.d
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: 0644
